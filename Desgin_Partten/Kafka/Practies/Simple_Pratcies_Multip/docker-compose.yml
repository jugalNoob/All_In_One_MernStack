version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - backend_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - backend_network

  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - data:/data/db
    networks:
      - backend_network

  backend:
    build: ./backend
    container_name: backend-container
    ports:
      - "9000:9000"
    volumes:
      - ./backend:/app
    working_dir: /app
    command: ["npm", "run", "dev"]
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
      - mongodb
    networks:
      - backend_network

volumes:
  data:

networks:
  backend_network:
